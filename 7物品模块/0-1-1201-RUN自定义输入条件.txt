FIELD
{
    .1201.Query物品类别;
    .1201.Query状态;
    .1201.Query物品名称;

    .1114.物品名称;
}
VAR
{
    int ret, exist;
    String item_name, find_item_name;
    Struct0 st0_name, st0_1201;
    Struct2 st2_1114;
}
CLIENT
{
    st0_name.message = "支持物品名称完全匹配和模糊匹配搜索。
    1、完全匹配：输入【文件夹】会筛选出名为“ 文件夹 ”三个字的物品。
    2、模糊匹配：输入【物品名称前几个字  +  “ * ”号】（*号表示匹配任意个文字），例如输入【文*】则筛选出所有名称以“ 文 ”开头的（比如“ 文件夹 ”、“ 文件袋 ”等）的物品，“ * ”号只能放在文字后面做匹配。";
    ret = FW_Dialog1(st0_name);
    if(ret == 0)
    {
        return(0);
    }
    item_name = st0_name.sVALUE;
    ret = item_name.Find("*");
    if(ret > -1)
    {
        find_item_name = "1114, RANGE(item_name)@物品名称";
    }else
    {
        find_item_name = "1114, item_name@物品名称";
    }
}
SERVER
{
    st2_1114 = FW_FindRecords(find_item_name, 1);
    if(st2_1114.mError == 0)
    {
        exist = 1;
    }else
    {
        exist = 0;
    }
    return(GotoClient);
}
CLIENT
{
    if(exist == 1)
    {
        FW_SetValue_w(1201, Query物品类别, 0, "****");
        FW_SetValue_w(1201, Query状态, 0, "****");
        FW_SetValue_w(1201, Query物品名称, 0, item_name);
        st0_1201 = FW_RecordSort(1201, Query物品名称, 0);
        if(st0_1201.mError != 0)
        {
            FW_Dialog1(排序失败！);
        }
    }else
    {
        FW_Dialog1(当前物品库中暂未收录您输入的物品！或检查输入的物品名称格式是否有误。);
        Goto(0);
    }
}